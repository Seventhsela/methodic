import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command
from aiogram.client.bot import DefaultBotProperties
import os
from dotenv import load_dotenv

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = 829329480


bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())

payment_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üí∏ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data = 'pay')
        ]])

@dp.message(F.text == "/start")
async def start(message: types.Message):
    await message.answer(
         "<b>–ü—Ä–∏–≤–µ—Ç!</b>\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–±–µ –º–µ—Ç–æ–¥–∏—á–µ—Å–∫–æ–µ –ø–æ—Å–æ–±–∏–µ:\n\n"
        "üìò<b>¬´–ü–æ–ª–∏–∫–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞. –ü–µ—Ä–≤—ã–µ —à–∞–≥–∏. –ê–º–±—É–ª–∞—Ç–æ—Ä–Ω—ã–π –ø—Ä–∏—ë–º –±–µ–∑ –ø–∞–Ω–∏–∫–∏¬ª</b>\n\n"
        "–≠—Ç–æ –Ω–µ–∑–∞–º–µ–Ω–∏–º–∞—è –º–µ—Ç–æ–¥–∏—á–∫–∞ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –≤—Ä–∞—á–µ–π ‚Äî –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —É–≤–µ—Ä–µ–Ω–Ω–æ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –≤ –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–µ –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞ –∏ –ø–∞–Ω–∏–∫–∏.\n\n"
        "üí° –í–Ω—É—Ç—Ä–∏ —Ç—ã –Ω–∞–π–¥—ë—à—å:\n"
        "‚Äî –†–∞–∑–±–æ—Ä —Ç–∏–ø–æ–≤—ã—Ö –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏—Ö —Å–ª—É—á–∞–µ–≤\n"
        "‚Äî –ß—ë—Ç–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∞–º–±—É–ª–∞—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–∏—ë–º–∞\n"
        "‚Äî –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏\n\n"
        "üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å ‚Äî *5000 —Ç–≥*\n"
        "üì© –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º ‚Äî –ø–∏—à–∏ –º–Ω–µ @Indira120297!",
        parse_mode=ParseMode.HTML, reply_markup=payment_keyboard
    )

@dp.callback_query(F.data == "pay")
async def pay(callback: types.CallbackQuery):
    await callback.message.edit_text("üßæ –û–ø–ª–∞—Ç–∞ –º–µ—Ç–æ–¥–∏—á–∫–∏ ¬´–ü–æ–ª–∏–∫–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞. –ü–µ—Ä–≤—ã–µ —à–∞–≥–∏. –ê–º–±—É–ª–∞—Ç–æ—Ä–Ω—ã–π –ø—Ä–∏—ë–º –±–µ–∑ –ø–∞–Ω–∏–∫–∏¬ª\n\n"
                                  "–°—Ç–æ–∏–º–æ—Å—Ç—å: 5 000 ‚Ç∏\n\n"
                                  "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç–æ–¥–∏—á–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–∏–∑–≤–µ–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:\n"
                                  "Kaspi Gold:üí≥ 4400430311951799\n\n"
                                  "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –≤ —ç—Ç–æ—Ç —á–∞—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
                                  "–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–º –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω–∞ –º–µ—Ç–æ–¥–∏—á–∫–∞ –≤ PDF-—Ñ–æ—Ä–º–∞—Ç–µ.")

@dp.message(F.photo | F.document)
async def check_handler(message: types.Message):
    user = message.from_user
    user_id = user.id
    username = user.username or "–±–µ–∑ –Ω–∏–∫–∞"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve:{user_id}"
                ),
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"decline:{user_id}"
                )
            ]
        ]
    )


    await bot.send_photo(
    chat_id=ADMIN_ID,
    photo=message.photo[-1].file_id,
    caption=f"üßæ –ß–µ–∫ –æ—Ç @{username} (ID: {user_id})", reply_markup=keyboard)

    await message.answer("–ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")


@dp.callback_query(F.data.startswith("approve:"))
async def approve_callback(callback: types.CallbackQuery):
    user_id = int(callback.data.split(":")[1])
    await callback.answer("–û–¥–æ–±—Ä–µ–Ω–æ ‚úÖ")

    await callback.message.edit_caption(callback.message.caption + "\n\n‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")

    
    file_path="–º–µ—Ç –ø–æ—Å–æ–±–∏–µ.pdf"
    document = types.FSInputFile(file_path)

    await bot.send_document(
        chat_id=user_id,
        document=document,
        caption="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –í–æ—Ç –≤–∞—à —Ñ–∞–π–ª üìÑ"
    )


@dp.callback_query(F.data.startswith("decline:"))
async def decline_callback(callback: types.CallbackQuery):
    user_id = int(callback.data.split(":")[1])
    await callback.answer("–û—Ç–∫–ª–æ–Ω–µ–Ω–æ ‚ùå")

    await callback.message.edit_caption(callback.message.caption + "\n\n‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")

    await bot.send_message(
        chat_id=user_id,
        text="–û–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ–∫ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    )

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
         asyncio.run(main())
    except KeyboardInterrupt:

        print("Bot is disconnect!")
