import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command
from aiogram.client.bot import DefaultBotProperties
import os
from dotenv import load_dotenv

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = 829329480


bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())

payment_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üí∏ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data = 'pay')
        ]])

@dp.message(F.text == "/start")
async def start(message: types.Message):
    await message.answer(
         "<b>–ü—Ä–∏–≤–µ—Ç!</b>\n\n"
        "–Ø –∑–Ω–∞—é, –∫–∞–∫ –∏–Ω–æ–≥–¥–∞ –±—ã–≤–∞–µ—Ç –Ω–µ–ø—Ä–æ—Å—Ç–æ, –∏ –∏–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É —Å–æ–∑–¥–∞–ª–∞ —ç—Ç–æ –ø–æ—Å–æ–±–∏–µ.\n"
        "–ß–µ—Ä–µ–∑ —ç—Ç–æ—Ç –±–æ—Ç —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤ –∏ –ø—É—Å—Ç—å –æ–Ω–æ —Å—Ç–∞–Ω–µ—Ç —Ç–≤–æ–µ–π –æ–ø–æ—Ä–æ–π –≤ –≤–∞–∂–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–∞—Ö.\n\n"
        "üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å ‚Äî *2500 —Ç–≥*\n"
        "üì© –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º ‚Äî –ø–∏—à–∏ –º–Ω–µ @Indira120297!",
        parse_mode=ParseMode.HTML, reply_markup=payment_keyboard
    )

@dp.callback_query(F.data == "pay")
async def pay(callback: types.CallbackQuery):
    await callback.message.edit_text("üßæ –û–ø–ª–∞—Ç–∞ –∫—Ä–∞—Ç–∫–æ–≥–æ –ø–æ—Å–æ–±–∏—è –¥–ª—è –º–∞–º\n\n"
                                  "–°—Ç–æ–∏–º–æ—Å—Ç—å: 2 500 ‚Ç∏\n\n"
                                  "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–æ–±–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–∏–∑–≤–µ–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:\n"
                                  "Kaspi Gold:üí≥ 4400430311951799\n\n"
                                  "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∫—É–º–µ–Ω—Ç —á–µ–∫–∞ –≤ —ç—Ç–æ—Ç —á–∞—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
                                  "–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–º –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω–æ –ø–æ—Å–æ–±–∏–µ –≤ PDF-—Ñ–æ—Ä–º–∞—Ç–µ.")

@dp.message(F.photo)
async def check_handler(message: types.Message):
    user = message.from_user
    user_id = user.id
    username = user.username or "–±–µ–∑ –Ω–∏–∫–∞"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve:{user_id}"
                ),
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"decline:{user_id}"
                )
            ]
        ]
    )


    await bot.send_photo(
    chat_id=ADMIN_ID,
    photo=message.photo[-1].file_id,
    caption=f"üßæ –ß–µ–∫ –æ—Ç @{username} (ID: {user_id})",
    reply_markup=keyboard
    )

    await message.answer("–ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")


@dp.message(F.document)
async def check_document_handler(message: types.Message):
    user = message.from_user
    user_id = user.id
    username = user.username or "–±–µ–∑ –Ω–∏–∫–∞"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve:{user_id}"),
                InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"decline:{user_id}")
            ]
        ]
    )

    await bot.send_document(
        chat_id=ADMIN_ID,
        document=message.document.file_id,
        caption=f"üßæ –ß–µ–∫ (PDF) –æ—Ç @{username} (ID: {user_id})",
        reply_markup=keyboard
    )

    await message.answer("–ß–µ–∫ (PDF) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")


@dp.callback_query(F.data.startswith("approve:"))
async def approve_callback(callback: types.CallbackQuery):
    user_id = int(callback.data.split(":")[1])
    await callback.answer("–û–¥–æ–±—Ä–µ–Ω–æ ‚úÖ")

    await callback.message.edit_caption(callback.message.caption + "\n\n‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")

    
    file_path="–∫—Ä–∞—Ç–∫–æ–µ –ø–æ—Å–æ–±–∏–µ –¥–ª—è –º–∞–º –º–∞–ª—ã—à–µ–π.pdf"
    document = types.FSInputFile(file_path)

    await bot.send_document(
        chat_id=user_id,
        document=document,
        caption="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –í–æ—Ç –≤–∞—à —Ñ–∞–π–ª üìÑ"
    )


@dp.callback_query(F.data.startswith("decline:"))
async def decline_callback(callback: types.CallbackQuery):
    user_id = int(callback.data.split(":")[1])
    await callback.answer("–û—Ç–∫–ª–æ–Ω–µ–Ω–æ ‚ùå")

    await callback.message.edit_caption(callback.message.caption + "\n\n‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")

    await bot.send_message(
        chat_id=user_id,
        text="–û–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ–∫ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    )

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
         asyncio.run(main())
    except KeyboardInterrupt:

        print("Bot is disconnect!")





